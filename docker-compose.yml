############
# Jellyfin #
############
--- 
version: "2.1" 

volumes:
  portainer-data:
  jellyfin-config:
  nzbget-config:
  sonarr-config:
  radarr-config:
  lidarr-config:
  ombi-config:
  organizr-config:
  nginx-data:
  nginx-certs:
  
services: 
  portainer:
    image: portainer/portainer
    container_name: portainer 
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data

  jellyfin: 
    image: lscr.io/linuxserver/jellyfin:latest 
    container_name: jellyfin 
    environment: 
      - PUID=1000 
      - PGID=1000 
      - TZ=America/New_York 
      - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional 
    volumes: 
      - jellyfin-config:/config 
      - /mnt/media/tv:/data/tvshows 
      - /mnt/media/movies:/data/movies 
      - /mnt/media/music:/data/music
    ports: 
      - 8096:8096 
      #- 8920:8920 #optional 
      #- 7359:7359/udp #optional 
      #- 1900:1900/udp #optional 
    restart: unless-stopped 

  nzbget: 
    image: lscr.io/linuxserver/nzbget:latest 
    container_name: nzbget 
    environment: 
      - PUID=1000 
      - PGID=1000 
      - TZ=America/New_York 
      - NZBGET_USER=nzbget #optional 
      - NZBGET_PASS=tegbzn6789 #optional 
    volumes: 
      - nzbget-config:/config 
      - /mnt/downloads:/downloads #optional 
    ports: 
      - 6789:6789 
    restart: unless-stopped 

  sonarr: 
    image: lscr.io/linuxserver/sonarr:latest 
    container_name: sonarr 
    environment: 
      - PUID=1000 
      - PGID=1000 
      - TZ=America/New_York 
    volumes: 
      - sonarr-config:/config 
      - /mnt/media/tv:/tv #optional 
      - /mnt/downloads:/downloads #optional 
    ports: 
      - 8989:8989 
    restart: unless-stopped 

  radarr: 
    image: lscr.io/linuxserver/radarr:latest 
    container_name: radarr 
    environment: 
      - PUID=1000 
      - PGID=1000 
      - TZ=America/New_York 
    volumes: 
      - radarr-config:/config 
      - /mnt/media/movies:/movies #optional 
      - /mnt/downloads:/downloads #optional 
    ports: 
      - 7878:7878 
    restart: unless-stopped 

  lidarr: 
    image: lscr.io/linuxserver/lidarr:latest 
    container_name: lidarr 
    environment: 
      - PUID=1000 
      - PGID=1000 
      - TZ=America/New_York 
    volumes: 
      - lidarr-config:/config 
      - /mnt/media/music:/music #optional 
      - /mnt/downloads:/downloads #optional 
    ports: 
      - 8686:8686 
    restart: unless-stopped 

  ombi: 
    image: lscr.io/linuxserver/ombi:latest 
    container_name: ombi 
    environment: 
      - PUID=1000 
      - PGID=1000 
      - TZ=America/New_York 
      - BASE_URL=/ombi #optional 
    volumes: 
      - ombi-config:/config 
    ports: 
      - 3579:3579 
    restart: unless-stopped 

  organizr: 
      container_name: organizr 
      hostname: organizr 
      image: organizr/organizr:latest 
      restart: unless-stopped 
      ports: 
          - 8080:80 
      volumes: 
          - organizr-config:/config 
      environment: 
          - PUID=1000 
          - PGID=1000 
          - TZ=America/New_York 

  nginx-proxy-manager: 
    image: 'jc21/nginx-proxy-manager:latest' 
    container_name: nginx-proxy-manager 
    restart: unless-stopped 
    ports: 
      # These ports are in format <host-port>:<container-port> 
      - '80:80' # Public HTTP Port 
      - '443:443' # Public HTTPS Port 
      - '81:81' # Admin Web Port 
      # Add any other Stream port you want to expose 
      # - '21:21' # FTP 
    environment: 
      DB_MYSQL_HOST: "ngingx-proxy-manager-db" 
      DB_MYSQL_PORT: 3306 
      DB_MYSQL_USER: "user" 
      DB_MYSQL_PASSWORD: "password" 
      DB_MYSQL_NAME: "database" 
      # Uncomment this if IPv6 is not enabled on your host 
      # DISABLE_IPV6: 'true' 
    volumes: 
      - nginx-data:/data 
      - nginx-certs:/etc/letsencrypt 
    depends_on: 
      - ngingx-proxy-manager-db 
  ngingx-proxy-manager-db: 
    image: 'jc21/mariadb-aria:latest' 
    container_name: nginx-proxy-manager-db 
    restart: unless-stopped 
    environment: 
      MYSQL_ROOT_PASSWORD: 'password' 
      MYSQL_DATABASE: 'database' 
      MYSQL_USER: 'user' 
      MYSQL_PASSWORD: 'password' 
    volumes: 
      - ./data/mysql:/var/lib/mysql 
